{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red46\green45\blue42;\red255\green255\blue255;\red162\green70\blue22;
}
{\*\expandedcolortbl;;\cssrgb\c23529\c23137\c21569;\cssrgb\c100000\c100000\c100000;\cssrgb\c70196\c35294\c10588;
}
{\info
{\author Elisabeth Robson}}\margl1440\margr1440\vieww19520\viewh25200\viewkind0
\deftab720
\pard\pardeftab720\sl920\partightenfactor0

\f0\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Code the timer: Overview\
\pard\pardeftab720\sa400\partightenfactor0

\fs36 \cf2 Okay, you know how we're going to use a timer to control the rounds of the game, so let's get the code implemented. We're going to need two new global variables,\'a0
\f1 \cf4 \strokec4 timer
\f0 \cf2 \strokec2 \'a0and\'a0
\f1 \cf4 \strokec4 reproductionTime
\f0 \cf2 \strokec2 \'a0to store the timer, and set how long we want to wait between generations. We'll add those variables to the top of the code.\cb1 \
\cb3 Then all we're going to do is call the\'a0
\f1 \cf4 \strokec4 play
\f0 \cf2 \strokec2 \'a0function on a timer. This will make sure that as long as the game is going (that is, you haven't clicked the "pause" or "clear" buttons), the\'a0
\f1 \cf4 \strokec4 play
\f0 \cf2 \strokec2 \'a0function will get called again and again, and each time, it will compute a new generation of life.\cb1 \
\cb3 Watch the video in the next lesson, and get the code added to "code.js", and then we'll test!\cb1 \
}